version: '3.8'

services:
  stream-node:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stream-node-server
    restart: unless-stopped
    
    # Security: Run with limited privileges
    security_opt:
      - no-new-privileges:true
    read_only: true
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    
    # Environment variables
    environment:
      - GIN_MODE=release
      - TZ=UTC
    
    # Ports
    ports:
      - "8080:8080"
    
    # Volumes for persistent data
    volumes:
      # Streams storage (writable)
      - stream_data:/app/streams
      # Logs (writable)  
      - stream_logs:/tmp
      # Config override (optional)
      - ./configs:/app/configs:ro
    
    # Health check
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Labels for monitoring/management
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.stream-node.rule=Host(`stream.localhost`)"
      - "traefik.http.services.stream-node.loadbalancer.server.port=8080"
      - "com.neural-interface.service=stream-node"
      - "com.neural-interface.version=2.1.4"

  # Optional: FFmpeg for stream processing
  # Uncomment if you want a separate FFmpeg container
  # ffmpeg:
  #   image: jrottenberg/ffmpeg:4.4-alpine
  #   container_name: stream-ffmpeg
  #   restart: unless-stopped
  #   volumes:
  #     - stream_data:/streams
  #   command: >
  #     -re -f lavfi -i testsrc2=duration=60:size=1280x720:rate=30
  #     -vf "drawtext=fontfile=/usr/share/fonts/dejavu/DejaVuSans-Bold.ttf:text='[NEURAL_STREAM]':x=10:y=10:fontsize=24:fontcolor=white@0.8:box=1:boxcolor=black@0.5"
  #     -c:v libx264 -preset ultrafast -tune zerolatency
  #     -f hls -hls_time 2 -hls_list_size 3 -hls_flags delete_segments
  #     /streams/live/output.m3u8

volumes:
  stream_data:
    driver: local
    name: stream_node_data
  stream_logs:
    driver: local
    name: stream_node_logs

networks:
  default:
    name: stream_network
    driver: bridge